// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TinyCards.Core.Data;

namespace EFMigrations.Migrations
{
    [DbContext(typeof(CardDbContext))]
    [Migration("20210223093545_MoreTables")]
    partial class MoreTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TinyCards.Core.Model.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique()
                        .HasFilter("[Number] IS NOT NULL");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("TinyCards.Core.Model.CardLimit", b =>
                {
                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LimitType")
                        .HasColumnType("int");

                    b.Property<decimal>("AggregateAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IsoDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardNumber", "LimitType");

                    b.HasIndex("LimitType");

                    b.ToTable("CardLimit");
                });

            modelBuilder.Entity("TinyCards.Core.Model.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("TinyCards.Core.Model.Transaction", b =>
                {
                    b.HasOne("TinyCards.Core.Model.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId");

                    b.Navigation("Card");
                });
#pragma warning restore 612, 618
        }
    }
}
